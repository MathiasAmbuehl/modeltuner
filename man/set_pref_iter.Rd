% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_pref_iter.R
\name{set_pref_iter}
\alias{set_pref_iter}
\alias{set_pref_iter.model}
\alias{set_pref_iter.model_fm_xgb}
\alias{set_pref_iter.model_fm_glmnet}
\alias{set_pref_iter.cv}
\alias{extract_pref_iter}
\alias{expand_pref_iter}
\title{Extract set, and expand preference criteria for a \dQuote{cv} object for iteratively fitted models}
\usage{
set_pref_iter(x, iter, ...)

\method{set_pref_iter}{model}(x, ...)

\method{set_pref_iter}{model_fm_xgb}(x, iter, verbose = TRUE, warn = TRUE, ...)

\method{set_pref_iter}{model_fm_glmnet}(x, iter, lambda = NULL, verbose = TRUE, warn = TRUE, ...)

\method{set_pref_iter}{cv}(
  x,
  iter,
  which = label.cv(x),
  label = label.cv(x),
  keep_all = TRUE,
  ...
)

extract_pref_iter(x, ...)

expand_pref_iter(x, iter = NULL, which = label.cv(x))
}
\arguments{
\item{x}{A cross-validated model, of class \dQuote{\link{cv}}, usually based on an \emph{iteratively fitted model} (IFM, see \link{ifm}).
In \code{set_pref_iter()}, \code{x} can also be a \link{model} or a fitted model.}

\item{iter}{Usually an integer value. If \code{x} is a \dQuote{cv}, it can also be a preference criterion
(see \code{\link{crit_iter}}) -- multiple criteria are not allowed.
If \code{x} is a \dQuote{model} and has cross-validation information, \code{iter} can be omitted and
the preferred iteration from cross-validation will then be selected.}

\item{\dots}{Arguments passed to methods.}

\item{verbose}{Logical: Show information on modification of arguments in the model generating call?}

\item{warn}{Logical: Whether to issue a warning if the required information on preferred iterations is not available.}

\item{lambda}{Vector lambda (of decreasing numeric values) to pass to \code{\link{glmnet}()}.}

\item{which}{Character, integer or logical vector specifying the cross-validated models to be modified or expanded.}

\item{label}{\code{\link{label}} of output object.}

\item{keep_all}{Logical: If \code{TRUE}, all preference criteria are kept, if \code{FALSE}, only the selected one.
\code{keep_all} is relevant only if there is more than one preference criterion.}
}
\value{
A modified object of the same class as \code{x}.
}
\description{
\code{set_pref_iter()} modifies a model or cross-validated model (usually an iteratively fitted model/\link{ifm})
by altering its preferences with respect to iterations,
without re-fitting the model or re-running the cross-validation, respectively.
This is a generic function and its action varies depending on the class of the object being modified.
See the \dQuote{Details} section below.

\code{extract_pref_iter()} extracts the information on preferred iterations from a \dQuote{cv} object.

\code{expand_pref_iter()} converts a \dQuote{cv} object with multiple preferred iterations to a \dQuote{cv} object
having several (identical) models, but different preferred iterations.
}
\details{
What \code{set_pref_iter()} does varies between classes:
\itemize{
\item{
If \code{x} is a \emph{fitted model}, \code{iter} is a required argument and must be a positive integer.
The \code{pref_iter} component in the fitted object is set equal to \code{iter}, and the \code{call} is adjusted.
The adjustment of the call consists in setting \code{pref_iter} and making more changes that vary between model classes.
If the actual model is a \dQuote{fm_xgb}, \code{nrounds} and \code{early_stopping_rounds} are adjusted,
in case of a \dQuote{fm_glmnet}, the value of \code{gamma} is changed.
These changes are such that
\itemize{
\item{\code{predict()} will return predictions from the \code{iter}th iteration and}
\item{execution of the adjusted call generates a model that shares this behavior and stops the fitting
process immediately after that iteration.}
}
Note that the model is \emph{not} re-fitted, and that the \sQuote{fitted} model returned by \code{set_pref_iter()}
is in some sense improper, because the object is not identical with what would result from executing the \code{call} stored in that model.
However, the resulting \code{predict}ions would be the same.
}
\item{
If \code{x} is an object of class \dQuote{\link{model}}, its \code{call} element is adjusted, exactly as described above
for \emph{fitted} models. If \code{x} has a model fit attached to it (i.e. if \code{has_fit(x)} returns \code{TRUE}),
this fitted model is adjusted, too.
If \code{x} is a model but not an IFM, then it is returned unchanged.
}
\item{
If \code{x} is a cross-validated model (class \dQuote{\link{cv}}), the information about preferred iterations
(stored as a part of the component \code{extras}) is modified and the \dQuote{model} is adapted, too.
}
}
There is currently no method \code{set_pref_iter.multimodel()}.
}
\examples{
d <- simuldat(n = 5000)
m <- model("fm_xgb", Y ~ ., d, nrounds = 200, class = "fm_xgb", 
           label = "xgb")
cvm <- cv(m, iter = c(crit_min(), crit_last(), crit_overfit(.5)), 
          nfold = .3)
print(cvm, what = "call")           
extract_pref_iter(cvm)
cv_performance(cvm)
plot(evaluation_log(cvm))

# set_pref_iter
cvm_last <- set_pref_iter(cvm, crit_last(), label = "xgb_last")
cv_performance(c(cvm, cvm_last))

# expand_pref_iter
cvm_expanded <- expand_pref_iter(cvm)
print(cvm_expanded, what = c("call"))
cv_performance(cvm_expanded)       
plot(evaluation_log(cvm_expanded))

}
\seealso{
\code{\link{ifm}}, \code{\link{fm_xgb}}, \code{\link{fm_glmnet}}, \code{\link{fit}},
\code{\link{crit_iter}}.
}
