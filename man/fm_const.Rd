% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fm_const.R
\name{fm_const}
\alias{fm_const}
\alias{print.fm_const}
\alias{predict.fm_const}
\title{Fitting a constant model}
\usage{
fm_const(formula, data, fun = mean, weights = NULL, na.action = na.omit, ...)

\method{print}{fm_const}(x, abbreviate = TRUE, ...)

\method{predict}{fm_const}(object, newdata, ...)
}
\arguments{
\item{formula}{A formula. Only the left hand side relevant.}

\item{data}{A \code{data.frame}.}

\item{fun}{A function defining a location estimate.
Takes a numeric vector as its first argument, optionally an argument \code{weights},
and returns a numeric value.}

\item{weights}{Optional numeric vector, The fitting weights.}

\item{na.action}{A function which indicates what should happen when the
response variable contains \code{NA}s.}

\item{\dots}{Arguments passed to \code{fun()}.}

\item{x, object}{Object of class \dQuote{fm_const}.}

\item{abbreviate}{Logical. If \code{TRUE} (the default), long formulas and calls are printed in abbreviated mode,
such that they usually fit on 4 or fewer output lines; otherwise they are printed entirely, no matter how long they are.}

\item{newdata}{Data for prediction.}
}
\value{
\code{fm_const()} returns a list of class \dQuote{fm_glmnet} with components
\itemize{
\item{\emph{estimate}: the estimated value;}
\item{\emph{formula}: the formula;}
\item{\emph{n}: the number of rows in \code{data};}
\item{\emph{rownames}: the rownames of the \code{data};}
\item{\emph{fun}: the fitting function \code{fun()};}
\item{\emph{weights}: the fitting weights;}
\item{\emph{na.action}: the \code{\link{na.action}} used during data preparation;}
\item{\emph{call}: the matched call generating the model.}
}
}
\description{
This is a model fitting function with the usual arguments \code{formula},
\code{data} and optionally \code{weights}, defining a \dQuote{constant model}.
Model predictions will be equal to the result of applying \code{fun()} to the
response (left hand side variable of \code{formula}) for all observations.
Fitting such a model thus amounts to evaluating \code{fun(y)}, where \code{y} denotes
the model response.
}
\section{Methods (by generic)}{
\itemize{
\item \code{print(fm_const)}: \code{print()} method

\item \code{predict(fm_const)}: \code{predict()} method

}}
\examples{
fm <- fm_const(Sepal.Width ~ 1, iris)
fm
unique(predict(fm)) # all equal values

# Weighted constant model
wmean <- function(x, weights, ...) weighted.mean(x, w = weights, ...)
w <- runif(150)
fm_const(Sepal.Length ~ 1, iris, weights = w, fun = wmean)

}
