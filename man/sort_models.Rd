% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sort_models.R
\name{sort_models}
\alias{sort_models}
\alias{sort_models.model}
\alias{sort_models.multimodel}
\alias{sort_models.cv}
\alias{sort_models.performance}
\alias{sort_models.evaluation_log}
\title{Reorder models in an object of class \dQuote{multimodel}, \dQuote{cv}, \dQuote{performance} or \dQuote{evaluation_log}}
\usage{
sort_models(x, ...)

\method{sort_models}{model}(x, ...)

\method{sort_models}{multimodel}(x, order, ...)

\method{sort_models}{cv}(x, order, by = NULL, decreasing = FALSE, ...)

\method{sort_models}{performance}(x, order, by = NULL, decreasing = FALSE, ...)

\method{sort_models}{evaluation_log}(x, order, ...)
}
\arguments{
\item{x}{\code{multimodel} or \code{cv}}

\item{...}{Currently not used.}

\item{order}{A vector of model \code{\link{label}}s or integer indices.
If not complete, the remaining elements will be appended.
Example: If there are 4 models, and \code{order=c(4, 2)}, output will have units in order \code{c(4,2,1,3)}.}

\item{by}{Sort by the value of a column of the performance table
(only methods for classes \dQuote{cv} and \dQuote{performance}:
Character string specifying a column in the table.
Partial matching is accepted, such that \code{"test"} is sufficient to sort by
test error for any \code{metric}.}

\item{decreasing}{Logical: Sort in decreasing order of the \code{by} variable?}
}
\value{
\code{sort_models()} returns its input \code{x} with rearranged models.
}
\description{
Models are reordered according to argument \code{order}.
If \code{order} is shorter than the number of models, models specified in \code{order} will appear
before those not mentioned and the other will be appended.

The methods for classes \dQuote{cv} and \dQuote{performance}
can be sorted in order of model performance using the argument \code{by}.
}
\examples{
mm <- models(
  intercept = lm(Sepal.Length ~ 1 , iris),
  linear = lm(Sepal.Length ~ . , iris), 
  full = lm(Sepal.Length ~ .^2 , iris))
print(mm, what = "formula")

sort_models(mm, 3:1)
sort_models(mm, c(3:2))
sort_models(mm, c("full", "linear"))

# Sort by test performance
cvperf <- cv_performance(mm)
sort_models(cvperf, by = "test")

}
\seealso{
\code{\link[modeltuner]{subset}}
}
