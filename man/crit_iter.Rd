% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crit_iter.R
\name{crit_iter}
\alias{crit_iter}
\alias{crit_min}
\alias{crit_last}
\alias{crit_first}
\alias{crit_se}
\alias{crit_overfit}
\alias{crit_list}
\title{Preference criteria for iteratively fitted models}
\usage{
crit_min(label_suffix = "min")

crit_last(label_suffix = "last")

crit_first(label_suffix = "first")

crit_iter(iter, label_suffix = paste0("iter", iter))

crit_se(factor = 1, label_suffix = paste0(factor, "se"), warn = TRUE)

crit_overfit(ratio = 0.9, label_suffix = paste0("overfit", ratio), warn = TRUE)

crit_list(...)
}
\arguments{
\item{label_suffix}{Suffix used to create label.}

\item{iter}{Number of iteration}

\item{factor}{Factor applied to standard error.}

\item{warn}{Logical: Whether to warn in case of an invalid input.}

\item{ratio}{Ratio of training and test error.}

\item{\dots}{Enumeration of criteria.}
}
\value{
These functions return an object inheriting of class \dQuote{def_crit}.
}
\description{
These functions are passed to \code{\link{cv}(model, ...)} via the argument \code{iter}
in case of an iteratively fitted model (see \link{ifm}).

By default, \code{iter=crit_min()}.
\itemize{
\item{\code{crit_min()} selects the iteration with minimal test error.}
\item{\code{crit_last()} selects the last iteration.}
\item{\code{crit_first()} selects the first iteration.}
\item{\code{crit_iter(iter)} selects  \code{iter}th iteration.}
\item{\code{crit_se(factor)} selects the iteration with minimal test error among those where
the test error does not exceed the minimal test error by more than \code{factor} standard errors.}
\item{\code{crit_overfit(ratio)} selects the iteration with minimal test error among those where
the ratio of training and test error does not fall below \code{ratio}.}
\item{\code{crit_list(...)} combines several criteria, as in \code{crit_list(crit_min(), crit_se())}.
Writing \code{c(...)} with \code{...} being a number of criteria is equivalent with \code{crit_list(...)}.}
}
}
\examples{
crit_min()
crit_last()
crit_iter(20)
crit_iter(c(10, 20)) 
crit_se(2)
crit_overfit()
crit_overfit(c(1, .9, .8))

# combine criteria with either crit_list() or c():
crit_list(crit_first(), crit_last())
c(crit_first(), crit_last())    # the same

}
\seealso{
\link{ifm}, \code{\link{extract_pref_iter}}, \code{\link{set_pref_iter}}
}
