% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fm_knn.R
\name{fm_knn}
\alias{fm_knn}
\alias{predict.fm_knn}
\title{k-Nearest Neighbors model}
\usage{
fm_knn(
  formula,
  data,
  k = 5,
  standardize = TRUE,
  weights = NULL,
  na.action = na.omit,
  ...
)

\method{predict}{fm_knn}(object, newdata, k = object$k, ...)
}
\arguments{
\item{formula}{A \code{formula}.}

\item{data}{A \code{data.frame}.}

\item{k}{Either a scalar integer, the number of neighbors, or alternatively
a vector of (typically decreasing) non-negative numeric values.
In the latter case, the model predictions will be weighted averages,
with \code{k[1]} used as weight of the nearest neighbor, \code{k[2]} for the second nearest, etc.}

\item{standardize}{Logical: Standardize the columns of the \code{x}, the design matrix?
If \code{TRUE}, distances will be calculated after standardization using means and
standard deviations from the \code{x} matrix.}

\item{weights}{Weights used for averaging. Not used in the determination of neighbors.}

\item{na.action}{A function which indicates what should happen when the data contain \code{NA}s.
\code{\link{na.omit}} is the default, \code{\link{na.exclude}} or \code{\link{na.fail}}
could be useful alternative settings.}

\item{\dots}{Not used in \code{fm_knn()}. In \code{predict.fm_knn()}: passed to \code{\link{nn2}()}.}

\item{object}{Object of class \dQuote{fm_knn}.}

\item{newdata}{\code{data.frame} with the data to be predicted.
If missing, predictions for the model data will be returned.}
}
\value{
\code{fm_knn()} returns a list of class \dQuote{fm_knn} with components
\itemize{
\item{\emph{formula}: the formula;}
\item{\emph{x}: the model matrix (resulting from the \code{formula} using \code{model.matrix()});}
\item{\emph{y}: the vector of the response values;}
\item{\emph{k}: the parameter \code{k}, the number of neighbors;}
\item{\emph{standardize}: the parameter \code{standardize}, a logical value;}
\item{\emph{weights}: the fitting weights;}
\item{\emph{xlevels}: list of the levels of the factors included in the model;}
\item{\emph{na.action}: the \code{\link{na.action}} used during data preparation;}
\item{\emph{contrasts}: the \code{\link{contrasts}} used during data preparation;}
\item{\emph{call}: the matched call generating the model.}
}
}
\description{
This is a \code{formula}-based implementation of k-Nearest Neighbor.
\code{fm_knn()} \dQuote{fits} the model, which essentially amounts to
saving a reformatted copy of the model data.
The \code{predict} method finds the nearest neighbors of the points in \code{newdata}
(using \code{\link{nn2}()} from package \CRANpkg{RANN}) and returns their averages.
}
\details{
\dQuote{Fitting} a model with \code{fm_knn()} essentially amounts to saving the (possibly standardized) model data.

Bindings in distances are currently not handled in a clever way, such that the predictions may depend on the order of the data.

Combining an argument \code{k} of length \verb{>1} and non-Null \code{weights} results in a mixture of two types of weights and
is thus not recommended.
}
\section{Methods (by generic)}{
\itemize{
\item \code{predict(fm_knn)}: \code{predict} method for class \dQuote{fm_knn}.

}}
\examples{
d <- simuldat()
nnmodel <- fm_knn(Y~ ., d)
nnmodel

# Predictions for new observations 
newd <- simuldat(n = 10)
data.frame(newd["Y"], 
           pred = predict(nnmodel, newdata = newd))

}
\seealso{
\code{\link[RANN]{nn2}} (package \CRANpkg{RANN})
}
