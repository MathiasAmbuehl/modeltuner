% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot.evaluation_log.R
\name{plot.evaluation_log}
\alias{plot.evaluation_log}
\title{Plot method for class \dQuote{evaluation_log}}
\usage{
\method{plot}{evaluation_log}(
  x,
  errorbars = getOption("cv_show_se"),
  plot = TRUE,
  size = 2,
  lwd = 1,
  lwd_errorbars = 0.5,
  zeroline = TRUE,
  ...
)
}
\arguments{
\item{x}{An object of class \code{\link{evaluation_log}}.}

\item{errorbars}{Logical: Whether to add error bars in plots.}

\item{plot}{Logical: If \code{TRUE}, a ggplot is returned, if \code{FALSE} a \code{data.frame}.
\code{plot()} first prepares a \code{data.frame} and then draws some ggplot using this data,
with limited options for customization.
If you want to design your own plot, you can set \code{plot=FALSE}, and use the \code{data.frame} returned by \code{plot()}
to create your plot.}

\item{size}{Graphic detail: Size of point.}

\item{lwd}{Graphic detail: Line width of interpolating line.}

\item{lwd_errorbars}{Graphic detail: Line width of errorbars.}

\item{zeroline}{Logical: Whether to include a horizontal reference line at level 0.}

\item{\dots}{Currently not used.}
}
\value{
\code{plot.evaluation_log()} returns either a \link[ggplot2]{ggplot} or, if \code{plot=FALSE}, a \code{data.frame}.
}
\description{
Draws line plots of training and test errors in an evaluation log, if available.
}
\details{
The lengths of the errorbars corresponds to +/-1 standard error.
}
\examples{
# Evaluation log of a 'fm_xgb' model
fitted_xgb <- fm_xgb(Sepal.Length ~ ., iris, max_depth = 2)
evaluation_log(fitted_xgb)    # evaluation log of a model has no 
plot(evaluation_log(fitted_xgb))

# Evaluation log of cross-validated 'fm_xgb' model
cv_xgb <- cv(model(fitted_xgb, label = "xgb_depth2"))
evaluation_log(cv_xgb) 
plot(evaluation_log(cv_xgb))

# Evaluation log of several cross-validated models
mydata <- simuldat()
fitted_glmnet <- fm_glmnet(Y ~ ., mydata)
cv_glmnet <- cv(multimodel(fitted_glmnet, prefix = "glmnet", alpha = 0:1))
label(cv_glmnet) <- c("ridge", "lasso")
evaluation_log(cv_glmnet)
plot(evaluation_log(cv_glmnet))

}
\seealso{
\code{\link{evaluation_log}}, \code{\link{ifm}}
}
