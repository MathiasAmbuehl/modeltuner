% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/param_table.R
\name{param_table}
\alias{param_table}
\title{Table format with informative \code{print} method.}
\usage{
param_table(x, nms = rownames(x))
}
\arguments{
\item{x}{A \code{data.frame}.}

\item{nms}{Row names to be attributed to the output table.}
}
\value{
A parameter table.
}
\description{
\code{param_table()} creates an table inheriting from class \dQuote{param_table},
generalizing the class \dQuote{data.frame} and having a more informative \code{print()} method for list columns.
It is designed for internal usage in the modeltuner package.

The \emph{parameter table} of a (multi)model (element \code{param}) is a  \dQuote{param_table},
and the output of \code{\link{cv_performance}()} and \code{\link{performance}()}, too.
}
\details{
The class \dQuote{param_table} has a \code{print}-method that is often more informative that \code{print.data.frame()}.
It has some similarities with \code{tibble} regarding the rendering of \code{list} columns, but it differs
in that list elements of length 1 are displayed in a more informative way (see examples).

The class \dQuote{param_table} has additional methods of \code{\link{cbind}()}, \code{\link{rbind}()} and
\code{\link{as.data.frame}()}.
}
\examples{
# Create a data.frame with a list as its single column
tbl <- data.frame(row.names = 1:4)
tbl$mixed_list <- list(pi, "anything", y~x, 1:10)

# print as data.frame:
tbl

if (require(tibble)){
  # print as tibble:
  tibble(tbl)
}
   
# print as param_table:
param_table(tbl)
}
